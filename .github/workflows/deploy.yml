name: Deploy Backend and Frontend

on:
  push:
    branches: [ main ]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  SERVICE_NAME: portfolio-ai-backend

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
            - 'deployment/**'
          frontend:
            - 'frontend/**'

  deploy-backend:
    needs: check-changes
    if: needs.check-changes.outputs.backend-changed == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Set GCP project
      run: gcloud config set project ${{ env.GCP_PROJECT_ID }}

    - name: Setup GCP resources
      run: |
        gcloud services enable run.googleapis.com cloudbuild.googleapis.com storage.googleapis.com firestore.googleapis.com aiplatform.googleapis.com artifactregistry.googleapis.com
        gsutil mb -p ${{ env.GCP_PROJECT_ID }} -l ${{ env.GCP_REGION }} gs://${{ env.GCP_PROJECT_ID }}-portfolio-docs || true
        gcloud firestore databases create --location=${{ env.GCP_REGION }} --type=firestore-native || true
        gcloud iam service-accounts create portfolio-ai-sa --display-name="Portfolio AI Service Account" || true
        gcloud projects add-iam-policy-binding ${{ env.GCP_PROJECT_ID }} --member="serviceAccount:portfolio-ai-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com" --role="roles/run.invoker" || true
        gcloud projects add-iam-policy-binding ${{ env.GCP_PROJECT_ID }} --member="serviceAccount:portfolio-ai-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com" --role="roles/datastore.user" || true
        gcloud projects add-iam-policy-binding ${{ env.GCP_PROJECT_ID }} --member="serviceAccount:portfolio-ai-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com" --role="roles/storage.objectAdmin" || true
        gcloud projects add-iam-policy-binding ${{ env.GCP_PROJECT_ID }} --member="serviceAccount:portfolio-ai-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com" --role="roles/aiplatform.user" || true

    - name: Create .env file
      run: |
        cat > backend/.env << EOF
        GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
        GCP_REGION=${{ env.GCP_REGION }}
        GCS_BUCKET_NAME=${{ env.GCP_PROJECT_ID }}-portfolio-docs
        FIRESTORE_COLLECTION=portfolio_documents
        EOF

    - name: Deploy using Cloud Build
      run: gcloud builds submit --config=deployment/cloudbuild.yaml .

  deploy-frontend:
    needs: [check-changes, deploy-backend]
    if: always() && (needs.check-changes.outputs.frontend-changed == 'true' || needs.deploy-backend.result == 'success')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Update API URL in frontend
      run: |
        sed -i "s|const API_URL = '.*';|const API_URL = '${{ secrets.API_URL }}';|g" frontend/script.js

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend
